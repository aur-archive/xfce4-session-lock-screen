diff -r -c xfce4-session-4.8.2/panel-plugin/xfsm-logout-plugin.c xfce4-session-working/panel-plugin/xfsm-logout-plugin.c
*** xfce4-session-4.8.2/panel-plugin/xfsm-logout-plugin.c	2011-09-13 09:17:17.000000000 -0700
--- xfce4-session-working/panel-plugin/xfsm-logout-plugin.c	2011-09-30 12:46:00.519182001 -0700
***************
*** 59,64 ****
--- 59,66 ----
    XFSM_SHUTDOWN_REBOOT,
    XFSM_SHUTDOWN_SUSPEND,
    XFSM_SHUTDOWN_HIBERNATE,
+   XFSM_SHUTDOWN_SWITCH_USER,
+   XFSM_SHUTDOWN_LOCK_SCREEN,
  } XfsmShutdownType;
  
  
***************
*** 77,82 ****
--- 79,86 ----
  
  static void xfsm_logout_plugin_lock_screen(GtkAction *action,
                                             gpointer user_data);
+ static void xfsm_logout_plugin_switch_user(GtkAction *action,
+                                            gpointer user_data);
  static void xfsm_logout_plugin_do_something(GtkAction *action,
                                              gpointer user_data);
  
***************
*** 85,95 ****
--- 89,101 ----
  {
      { "session-menu", NULL, N_("Session"), NULL, NULL, NULL },
      { "lock-screen", "system-lock-screen", N_("Loc_k screen"), NULL, NULL, G_CALLBACK(xfsm_logout_plugin_lock_screen) },
+     { "switch-user", "system-switch-user", N_("Switch _user"), NULL, NULL, G_CALLBACK(xfsm_logout_plugin_switch_user) },
      { "suspend", "xfsm-suspend", N_("_Suspend"), NULL, NULL, G_CALLBACK(xfsm_logout_plugin_do_something) },
      { "hibernate", "xfsm-hibernate", N_("_Hibernate"), NULL, NULL, G_CALLBACK(xfsm_logout_plugin_do_something) },
      { "reboot", "xfsm-reboot", N_("_Reboot"), NULL, NULL, G_CALLBACK(xfsm_logout_plugin_do_something) },
      { "shutdown", "system-shutdown", N_("Shut _down"), NULL, NULL, G_CALLBACK(xfsm_logout_plugin_do_something) },
      { "logout", "system-log-out", N_("_Log out"), NULL, NULL, G_CALLBACK(xfsm_logout_plugin_do_something) },
+ 
  };
  
  static const struct
***************
*** 136,146 ****
          "xfsm-hibernate",
          N_("Failed to hibernate")
      },
  };
  
  static void
  xfsm_logout_plugin_lock_screen(GtkAction *action,
!                           gpointer user_data)
  {
      GError *error = NULL;
  
--- 142,166 ----
          "xfsm-hibernate",
          N_("Failed to hibernate")
      },
+     {   /* XFSM_SHUTDOWN_SWITCH_USER */
+         NULL,
+         NULL,
+         N_("Switch _User"),
+         "system-switch-user",
+         N_("Failed to switch user")
+     },
+     {   /* XFSM_SHUTDOWN_LOCK_SCREEN */
+         NULL,
+         NULL,
+         N_("L_ock Screen"),
+         "xfsm-switch",
+         N_("Failed to lock screen")
+     },
  };
  
  static void
  xfsm_logout_plugin_lock_screen(GtkAction *action,
!                                gpointer user_data)
  {
      GError *error = NULL;
  
***************
*** 151,156 ****
--- 171,189 ----
      }
  }
  
+ static void
+ xfsm_logout_plugin_switch_user(GtkAction *action,
+                                gpointer user_data)
+ {
+     GError *error = NULL;
+ 
+     if (!g_spawn_command_line_async("gdmflexiserver", &error)) {
+         xfce_dialog_show_error (NULL,
+                                 error,
+                                 _("gdmflexiserver could not be launched"));
+     }
+ }
+ 
  static gboolean
  xfsm_logout_plugin_do_dbus_call(XfsmLogoutPlugin *logout_plugin,
                                  XfsmShutdownType type,
***************
*** 331,336 ****
--- 364,371 ----
          type = XFSM_SHUTDOWN_SUSPEND;
      else if(!strcmp(name, "hibernate"))
          type = XFSM_SHUTDOWN_HIBERNATE;
+     else if(!strcmp(name, "switch-user"))
+         type = XFSM_SHUTDOWN_SWITCH_USER;
      else {
          g_critical(G_STRLOC ": Invalid action \"%s\"", name);
          return;
diff -r -c xfce4-session-4.8.2/panel-plugin/xfsm-logout-plugin-ui.h xfce4-session-working/panel-plugin/xfsm-logout-plugin-ui.h
*** xfce4-session-4.8.2/panel-plugin/xfsm-logout-plugin-ui.h	2011-09-13 09:17:44.000000000 -0700
--- xfce4-session-working/panel-plugin/xfsm-logout-plugin-ui.h	2011-09-30 15:47:40.505398430 -0700
***************
*** 9,18 ****
  #endif
  {
    "<ui><menubar name=\"main-menubar\"><menu action=\"session-menu\"><menui"
!   "tem action=\"lock-screen\"/><separator/><menuitem action=\"suspend\"/><"
    "menuitem action=\"hibernate\"/><separator/><menuitem action=\"reboot\"/"
!   "><menuitem action=\"shutdown\"/><separator/><menuitem action=\"logout\""
!   "/></menu></menubar></ui>"
  };
  
  static const unsigned logout_plugin_ui_length = 292u;
--- 9,19 ----
  #endif
  {
    "<ui><menubar name=\"main-menubar\"><menu action=\"session-menu\"><menui"
!   "tem action=\"lock-screen\"/><separator/><menuitem action=\"switch-user\""
!   "/><separator/><menuitem action=\"logout\""
!   "/><separator/><menuitem action=\"suspend\"/><separator/><"
    "menuitem action=\"hibernate\"/><separator/><menuitem action=\"reboot\"/"
!   "><menuitem action=\"shutdown\"/><separator/></menu></menubar></ui>"
  };
  
  static const unsigned logout_plugin_ui_length = 292u;
diff -r -c xfce4-session-4.8.2/panel-plugin/xfsm-logout-plugin-ui.xml xfce4-session-working/panel-plugin/xfsm-logout-plugin-ui.xml
*** xfce4-session-4.8.2/panel-plugin/xfsm-logout-plugin-ui.xml	2011-09-13 09:17:17.000000000 -0700
--- xfce4-session-working/panel-plugin/xfsm-logout-plugin-ui.xml	2011-09-30 15:54:59.703685558 -0700
***************
*** 2,15 ****
      <menubar name="main-menubar">
          <menu action="session-menu">
              <menuitem action="lock-screen"/>
              <separator/>
              <menuitem action="suspend"/>
              <menuitem action="hibernate"/>
-             <separator/>
-             <menuitem action="reboot"/>
-             <menuitem action="shutdown"/>
-             <separator/>
-             <menuitem action="logout"/>
          </menu>
      </menubar>
  </ui>
--- 2,14 ----
      <menubar name="main-menubar">
          <menu action="session-menu">
              <menuitem action="lock-screen"/>
+             <menuitem action="switch-user"/>
+             <menuitem action="logout"/>
              <separator/>
+             <menuitem action="shutdown"/>
+             <menuitem action="reboot"/>
              <menuitem action="suspend"/>
              <menuitem action="hibernate"/>
          </menu>
      </menubar>
  </ui>
diff -r -c xfce4-session-4.8.2/xfce4-session/main.c xfce4-session-working/xfce4-session/main.c
*** xfce4-session-4.8.2/xfce4-session/main.c	2011-09-13 09:17:17.000000000 -0700
--- xfce4-session-working/xfce4-session/main.c	2011-09-30 14:05:11.179381123 -0700
***************
*** 270,275 ****
--- 270,281 ----
    gtk_main ();
  
    shutdown_type = xfsm_manager_get_shutdown_type (manager);
+   
+   if ((shutdown_type == XFSM_SHUTDOWN_LOCK_SCREEN) || (shutdown_type == XFSM_SHUTDOWN_SWITCH_USER))
+     {
+       return EXIT_SUCCESS;
+     }
+   
    g_object_unref (manager);
    g_object_unref (channel);
  
diff -r -c xfce4-session-4.8.2/xfce4-session/shutdown.c xfce4-session-working/xfce4-session/shutdown.c
*** xfce4-session-4.8.2/xfce4-session/shutdown.c	2011-09-13 09:17:17.000000000 -0700
--- xfce4-session-working/xfce4-session/shutdown.c	2011-09-30 15:57:33.306420037 -0700
***************
*** 162,167 ****
--- 162,183 ----
      gtk_dialog_response (GTK_DIALOG (shutdown_dialog), GTK_RESPONSE_OK);
  }
  
+ static void
+ lock_screen_button_clicked (GtkWidget *b, gint *shutdownType)
+ {
+     *shutdownType = XFSM_SHUTDOWN_LOCK_SCREEN;
+     
+     gtk_dialog_response (GTK_DIALOG (shutdown_dialog), GTK_RESPONSE_OK);
+ }
+ 
+ static void
+ switch_user_button_clicked (GtkWidget *b, gint *shutdownType)
+ {
+     *shutdownType = XFSM_SHUTDOWN_SWITCH_USER;
+     
+     gtk_dialog_response (GTK_DIALOG (shutdown_dialog), GTK_RESPONSE_OK);
+ }
+ 
  /*
   */
  gboolean
***************
*** 187,192 ****
--- 203,210 ----
    GtkWidget *halt_button;
    GtkWidget *suspend_button = NULL;
    GtkWidget *hibernate_button = NULL;
+   GtkWidget *lock_screen_button;
+   GtkWidget *switch_user_button;
    GtkWidget *cancel_button;
    GtkWidget *ok_button;
    GdkPixbuf *icon;
***************
*** 195,200 ****
--- 213,221 ----
    gboolean prompt;
    gboolean show_suspend;
    gboolean show_hibernate;
+   
+   gboolean show_switch_user;
+   gboolean show_lock_screen;
  
    gboolean show_restart;
    gboolean show_shutdown;
***************
*** 243,248 ****
--- 264,271 ----
    prompt = xfconf_channel_get_bool (channel, "/general/PromptOnLogout", TRUE);
    show_suspend = xfconf_channel_get_bool (channel, "/shutdown/ShowSuspend", TRUE);
    show_hibernate = xfconf_channel_get_bool (channel, "/shutdown/ShowHibernate", TRUE);
+   show_lock_screen = xfconf_channel_get_bool (channel, "/general/ShowLockScreen", TRUE);
+   show_switch_user = xfconf_channel_get_bool (channel, "/general/ShowSwitchUser", TRUE);
  
    /* make the session-save settings obey the kiosk settings */
    if (!kiosk_can_save_session)
***************
*** 389,394 ****
--- 412,493 ----
    gtk_widget_show (hbox);
    gtk_box_pack_start (GTK_BOX (vbox), hbox, FALSE, FALSE, 0);
  
+   /* lock screen */
+   if (kiosk_can_shutdown && show_lock_screen)
+     {
+       lock_screen_button = gtk_button_new ();
+       gtk_widget_show (lock_screen_button);
+       gtk_box_pack_start (GTK_BOX (hbox), lock_screen_button, TRUE, TRUE, 0);
+ 
+       g_signal_connect (lock_screen_button, "clicked",
+                         G_CALLBACK (lock_screen_button_clicked), shutdownType);
+ 
+       vbox2 = gtk_vbox_new (FALSE, BORDER);
+       gtk_container_set_border_width (GTK_CONTAINER (vbox2), BORDER);
+       gtk_widget_show (vbox2);
+       gtk_container_add (GTK_CONTAINER (lock_screen_button), vbox2);
+ 
+       icon = gtk_icon_theme_load_icon (icon_theme,
+                                        "stock_lock",
+                                        32,
+                                        0,
+                                        NULL);
+ 
+       if (!icon)
+         icon = gtk_icon_theme_load_icon (icon_theme,
+                                          "xfsm-lock-screen",
+                                          32,
+                                          GTK_ICON_LOOKUP_GENERIC_FALLBACK,
+                                          NULL);
+ 
+       image = gtk_image_new_from_pixbuf (icon);
+       gtk_widget_show (image);
+       gtk_box_pack_start (GTK_BOX (vbox2), image, FALSE, FALSE, 0);
+       g_object_unref (icon);
+ 
+       label = gtk_label_new (_("Lock Screen"));
+       gtk_widget_show (label);
+       gtk_box_pack_start (GTK_BOX (vbox2), label, FALSE, FALSE, 0);
+   }
+ 
+   /* switch user */
+   if (kiosk_can_shutdown && show_switch_user)
+     {
+       switch_user_button = gtk_button_new ();
+       gtk_widget_show (switch_user_button);
+       gtk_box_pack_start (GTK_BOX (hbox), switch_user_button, TRUE, TRUE, 0);
+ 
+       g_signal_connect (switch_user_button, "clicked",
+                         G_CALLBACK (switch_user_button_clicked), shutdownType);
+ 
+       vbox2 = gtk_vbox_new (FALSE, BORDER);
+       gtk_container_set_border_width (GTK_CONTAINER (vbox2), BORDER);
+       gtk_widget_show (vbox2);
+       gtk_container_add (GTK_CONTAINER (switch_user_button), vbox2);
+ 
+       icon = gtk_icon_theme_load_icon (icon_theme,
+                                        "system-switch-user",
+                                        32,
+                                        0,
+                                        NULL);
+ 
+       if (!icon)
+         icon = gtk_icon_theme_load_icon (icon_theme,
+                                          "xfsm-switch",
+                                          32,
+                                          GTK_ICON_LOOKUP_GENERIC_FALLBACK,
+                                          NULL);
+ 
+       image = gtk_image_new_from_pixbuf (icon);
+       gtk_widget_show (image);
+       gtk_box_pack_start (GTK_BOX (vbox2), image, FALSE, FALSE, 0);
+       g_object_unref (icon);
+ 
+       label = gtk_label_new (_("Switch User"));
+       gtk_widget_show (label);
+       gtk_box_pack_start (GTK_BOX (vbox2), label, FALSE, FALSE, 0);
+   }
+ 
    /* logout */
    logout_button = gtk_button_new ();
    gtk_widget_show (logout_button);
***************
*** 423,450 ****
    gtk_widget_show (label);
    gtk_box_pack_start (GTK_BOX (vbox2), label, FALSE, FALSE, 0);
  
!   /* reboot */
!   reboot_button = gtk_button_new ();
!   gtk_widget_show (reboot_button);
!   gtk_box_pack_start (GTK_BOX (hbox), reboot_button, TRUE, TRUE, 0);
  
!   g_signal_connect (reboot_button, "clicked",
!                     G_CALLBACK (reboot_button_clicked), shutdownType);
  
    vbox2 = gtk_vbox_new (FALSE, BORDER);
    gtk_container_set_border_width (GTK_CONTAINER (vbox2), BORDER);
    gtk_widget_show (vbox2);
!   gtk_container_add (GTK_CONTAINER (reboot_button), vbox2);
  
    icon = gtk_icon_theme_load_icon (icon_theme,
!                                    "system-reboot",
                                     32,
                                     0,
                                     NULL);
  
    if (!icon)
      icon = gtk_icon_theme_load_icon (icon_theme,
!                                      "xfsm-reboot",
                                       32,
                                       GTK_ICON_LOOKUP_GENERIC_FALLBACK,
                                       NULL);
--- 522,570 ----
    gtk_widget_show (label);
    gtk_box_pack_start (GTK_BOX (vbox2), label, FALSE, FALSE, 0);
  
!   if (!kiosk_can_shutdown || !show_shutdown)
!     gtk_widget_set_sensitive (halt_button, FALSE);
  
!   if (show_suspend)
!     g_object_get (shutdown_helper,
!                   "user-can-suspend", &show_suspend,
!                   NULL);
! 
!   if (show_hibernate)
!     g_object_get (shutdown_helper,
!                   "user-can-hibernate", &show_hibernate,
!                   NULL);
! 
! 
!   if (kiosk_can_shutdown && (show_suspend || show_hibernate))
!     {
!       hbox = gtk_hbox_new (FALSE, BORDER);
!       gtk_widget_show (hbox);
!       gtk_box_pack_start (GTK_BOX (vbox), hbox, FALSE, FALSE, 0);
!     }
! 
!   /* halt */
!   halt_button = gtk_button_new ();
!   gtk_widget_show (halt_button);
!   gtk_box_pack_start (GTK_BOX (hbox), halt_button, TRUE, TRUE, 0);
! 
!   g_signal_connect (halt_button, "clicked",
!                     G_CALLBACK (halt_button_clicked), shutdownType);
  
    vbox2 = gtk_vbox_new (FALSE, BORDER);
    gtk_container_set_border_width (GTK_CONTAINER (vbox2), BORDER);
    gtk_widget_show (vbox2);
!   gtk_container_add (GTK_CONTAINER (halt_button), vbox2);
  
    icon = gtk_icon_theme_load_icon (icon_theme,
!                                    "system-shutdown",
                                     32,
                                     0,
                                     NULL);
  
    if (!icon)
      icon = gtk_icon_theme_load_icon (icon_theme,
!                                      "xfsm-shutdown",
                                       32,
                                       GTK_ICON_LOOKUP_GENERIC_FALLBACK,
                                       NULL);
***************
*** 454,492 ****
    gtk_box_pack_start (GTK_BOX (vbox2), image, FALSE, FALSE, 0);
    g_object_unref (icon);
  
!   label = gtk_label_new (_("Restart"));
    gtk_widget_show (label);
    gtk_box_pack_start (GTK_BOX (vbox2), label, FALSE, FALSE, 0);
  
    g_object_get (shutdown_helper,
!                 "user-can-restart", &show_restart,
                  NULL);
  
!   if (!kiosk_can_shutdown || !show_restart )
!     gtk_widget_set_sensitive (reboot_button, FALSE);
! 
!   /* halt */
!   halt_button = gtk_button_new ();
!   gtk_widget_show (halt_button);
!   gtk_box_pack_start (GTK_BOX (hbox), halt_button, TRUE, TRUE, 0);
  
!   g_signal_connect (halt_button, "clicked",
!                     G_CALLBACK (halt_button_clicked), shutdownType);
  
    vbox2 = gtk_vbox_new (FALSE, BORDER);
    gtk_container_set_border_width (GTK_CONTAINER (vbox2), BORDER);
    gtk_widget_show (vbox2);
!   gtk_container_add (GTK_CONTAINER (halt_button), vbox2);
  
    icon = gtk_icon_theme_load_icon (icon_theme,
!                                    "system-shutdown",
                                     32,
                                     0,
                                     NULL);
  
    if (!icon)
      icon = gtk_icon_theme_load_icon (icon_theme,
!                                      "xfsm-shutdown",
                                       32,
                                       GTK_ICON_LOOKUP_GENERIC_FALLBACK,
                                       NULL);
--- 574,609 ----
    gtk_box_pack_start (GTK_BOX (vbox2), image, FALSE, FALSE, 0);
    g_object_unref (icon);
  
!   label = gtk_label_new (_("Shut Down"));
    gtk_widget_show (label);
    gtk_box_pack_start (GTK_BOX (vbox2), label, FALSE, FALSE, 0);
  
    g_object_get (shutdown_helper,
!                 "user-can-shutdown", &show_shutdown,
                  NULL);
  
!   /* reboot */
!   reboot_button = gtk_button_new ();
!   gtk_widget_show (reboot_button);
!   gtk_box_pack_start (GTK_BOX (hbox), reboot_button, TRUE, TRUE, 0);
  
!   g_signal_connect (reboot_button, "clicked",
!                     G_CALLBACK (reboot_button_clicked), shutdownType);
  
    vbox2 = gtk_vbox_new (FALSE, BORDER);
    gtk_container_set_border_width (GTK_CONTAINER (vbox2), BORDER);
    gtk_widget_show (vbox2);
!   gtk_container_add (GTK_CONTAINER (reboot_button), vbox2);
  
    icon = gtk_icon_theme_load_icon (icon_theme,
!                                    "system-reboot",
                                     32,
                                     0,
                                     NULL);
  
    if (!icon)
      icon = gtk_icon_theme_load_icon (icon_theme,
!                                      "xfsm-reboot",
                                       32,
                                       GTK_ICON_LOOKUP_GENERIC_FALLBACK,
                                       NULL);
***************
*** 496,529 ****
    gtk_box_pack_start (GTK_BOX (vbox2), image, FALSE, FALSE, 0);
    g_object_unref (icon);
  
!   label = gtk_label_new (_("Shut Down"));
    gtk_widget_show (label);
    gtk_box_pack_start (GTK_BOX (vbox2), label, FALSE, FALSE, 0);
  
    g_object_get (shutdown_helper,
!                 "user-can-shutdown", &show_shutdown,
                  NULL);
  
!   if (!kiosk_can_shutdown || !show_shutdown)
!     gtk_widget_set_sensitive (halt_button, FALSE);
! 
!   if (show_suspend)
!     g_object_get (shutdown_helper,
!                   "user-can-suspend", &show_suspend,
!                   NULL);
! 
!   if (show_hibernate)
!     g_object_get (shutdown_helper,
!                   "user-can-hibernate", &show_hibernate,
!                   NULL);
! 
! 
!   if (kiosk_can_shutdown && (show_suspend || show_hibernate))
!     {
!       hbox = gtk_hbox_new (FALSE, BORDER);
!       gtk_widget_show (hbox);
!       gtk_box_pack_start (GTK_BOX (vbox), hbox, FALSE, FALSE, 0);
!     }
  
    /* suspend */
    if (kiosk_can_shutdown && show_suspend)
--- 613,628 ----
    gtk_box_pack_start (GTK_BOX (vbox2), image, FALSE, FALSE, 0);
    g_object_unref (icon);
  
!   label = gtk_label_new (_("Restart"));
    gtk_widget_show (label);
    gtk_box_pack_start (GTK_BOX (vbox2), label, FALSE, FALSE, 0);
  
    g_object_get (shutdown_helper,
!                 "user-can-restart", &show_restart,
                  NULL);
  
!   if (!kiosk_can_shutdown || !show_restart )
!     gtk_widget_set_sensitive (reboot_button, FALSE);
  
    /* suspend */
    if (kiosk_can_shutdown && show_suspend)
***************
*** 652,661 ****
    g_object_get (shutdown_helper,
                  "require-password", &require_password,
                  NULL);
! 
!   /* ask password */
!   if (result == GTK_RESPONSE_OK && *shutdownType != XFSM_SHUTDOWN_LOGOUT
!       && require_password )
      {
        gtk_widget_show (ok_button);
  
--- 751,759 ----
    g_object_get (shutdown_helper,
                  "require-password", &require_password,
                  NULL);
!   
!   if ((result == GTK_RESPONSE_OK && *shutdownType != XFSM_SHUTDOWN_LOGOUT
!       && require_password) )
      {
        gtk_widget_show (ok_button);
  
***************
*** 790,796 ****
  {
    gboolean result;
    GError *error = NULL;
! 
    /* kludge */
    if (type == XFSM_SHUTDOWN_ASK)
      {
--- 888,894 ----
  {
    gboolean result;
    GError *error = NULL;
!   
    /* kludge */
    if (type == XFSM_SHUTDOWN_ASK)
      {
diff -r -c xfce4-session-4.8.2/xfce4-session/xfsm-global.h xfce4-session-working/xfce4-session/xfsm-global.h
*** xfce4-session-4.8.2/xfce4-session/xfsm-global.h	2011-09-13 09:17:17.000000000 -0700
--- xfce4-session-working/xfce4-session/xfsm-global.h	2011-09-29 19:25:34.000000000 -0700
***************
*** 37,42 ****
--- 37,44 ----
    XFSM_SHUTDOWN_REBOOT,
    XFSM_SHUTDOWN_SUSPEND,
    XFSM_SHUTDOWN_HIBERNATE,
+   XFSM_SHUTDOWN_SWITCH_USER,
+   XFSM_SHUTDOWN_LOCK_SCREEN,
  } XfsmShutdownType;
  
  typedef struct _FailsafeClient FailsafeClient;
diff -r -c xfce4-session-4.8.2/xfce4-session/xfsm-manager.c xfce4-session-working/xfce4-session/xfsm-manager.c
*** xfce4-session-4.8.2/xfce4-session/xfsm-manager.c	2011-09-13 09:17:17.000000000 -0700
--- xfce4-session-working/xfce4-session/xfsm-manager.c	2011-09-30 15:33:30.778711307 -0700
***************
*** 1101,1106 ****
--- 1101,1120 ----
        if (shutdown_type != XFSM_SHUTDOWN_ASK)
          manager->shutdown_type = shutdown_type;
  
+       if (manager->shutdown_type == XFSM_SHUTDOWN_LOCK_SCREEN)
+         {
+           g_spawn_command_line_async("xflock4", NULL);
+           
+           return;
+         }
+       
+       if (manager->shutdown_type == XFSM_SHUTDOWN_SWITCH_USER)
+         {
+           g_spawn_command_line_async("gdmflexiserver", NULL);
+           
+           return;
+         }
+ 
        /* we only save the session and quit if we're actually shutting down;
         * suspend and hibernate will (if successful) return us to
         * exactly the same state, so there's no need to save session */
diff -r -c xfce4-session-4.8.2/xfce4-session/xfsm-shutdown-helper.c xfce4-session-working/xfce4-session/xfsm-shutdown-helper.c
*** xfce4-session-4.8.2/xfce4-session/xfsm-shutdown-helper.c	2011-09-13 09:17:17.000000000 -0700
--- xfce4-session-working/xfce4-session/xfsm-shutdown-helper.c	2011-09-29 17:58:07.000000000 -0700
***************
*** 1750,1755 ****
--- 1750,1790 ----
  
  }
  
+ 
+ /**
+  * xfsm_lock_screen:
+  *
+  *
+  **/
+  
+ static void
+ xfsm_lock_screen (void)
+ {
+   gboolean ret = g_spawn_command_line_async ("xflock4", NULL);
+ 
+   if ( !ret )
+     {
+       /* this should be the default*/
+       ret = g_spawn_command_line_async ("xdg-screensaver lock", NULL);
+     }
+ 
+   if ( !ret )
+     {
+       g_spawn_command_line_async ("gnome-screensaver-command -l", NULL);
+     }
+ 
+   if ( !ret )
+     {
+       ret = g_spawn_command_line_async ("xscreensaver-command -lock", NULL);
+     }
+ 
+   if ( !ret )
+     {
+       g_critical ("Connot lock screen\n");
+     }
+ }
+ 
+ 
  /**
   * xfsm_shutdown_helper_restart:
   *
diff -r -c xfce4-session-4.8.2/xfce4-session-logout/main.c xfce4-session-working/xfce4-session-logout/main.c
*** xfce4-session-4.8.2/xfce4-session-logout/main.c	2011-09-13 09:17:17.000000000 -0700
--- xfce4-session-working/xfce4-session-logout/main.c	2011-09-29 19:23:11.000000000 -0700
***************
*** 1,25 ****
- /* $Id$ */
- /*-
-  * Copyright (c) 2004,2008 Brian Tarricone <kelnos@xfce.org>
-  * Copyright (c) 2004 Benedikt Meurer <benny@xfce.org>
-  * All rights reserved.
-  *
-  * This program is free software; you can redistribute it and/or modify
-  * it under the terms of the GNU General Public License as published by
-  * the Free Software Foundation; either version 2, or (at your option)
-  * any later version.
-  *
-  * This program is distributed in the hope that it will be useful,
-  * but WITHOUT ANY WARRANTY; without even the implied warranty of
-  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-  * GNU General Public License for more details.
-  *
-  * You should have received a copy of the GNU General Public License
-  * along with this program; if not, write to the Free Software
-  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
-  * MA 02110-1301 USA.
-  */
- 
  #ifdef HAVE_CONFIG_H
  #include <config.h>
  #endif
--- 1,3 ----
***************
*** 42,50 ****
  #include <libxfce4util/libxfce4util.h>
  
  
- /* copied from xfce4-session/shutdown.h -- ORDER MATTERS.  The numbers
-  * correspond to the 'type' parameter of org.xfce.Session.Manager.Shutdown
-  */
  typedef enum
  {
    XFSM_SHUTDOWN_ASK = 0,
--- 20,25 ----
***************
*** 53,58 ****
--- 28,35 ----
    XFSM_SHUTDOWN_REBOOT,
    XFSM_SHUTDOWN_SUSPEND,
    XFSM_SHUTDOWN_HIBERNATE,
+   XFSM_SHUTDOWN_LOCK_SCREEN,
+   XFSM_SHUTDOWN_SWITCH_USER,
  } XfsmShutdownType;
  
  gboolean opt_logout = FALSE;
***************
*** 60,65 ****
--- 37,44 ----
  gboolean opt_reboot = FALSE;
  gboolean opt_suspend = FALSE;
  gboolean opt_hibernate = FALSE;
+ gboolean opt_lock_screen = FALSE;
+ gboolean opt_switch_user = FALSE;
  gboolean opt_fast = FALSE;
  gboolean opt_version = FALSE;
  
***************
*** 85,90 ****
--- 64,77 ----
      N_("Hibernate without displaying the logout dialog"),
      NULL
    },
+   { "lock", 'k', G_OPTION_FLAG_IN_MAIN, G_OPTION_ARG_NONE, &opt_lock_screen,
+     N_("Lock the screen without displaying the logout dialog"),
+     NULL
+   },
+   { "switch-user", 'w', G_OPTION_FLAG_IN_MAIN, G_OPTION_ARG_NONE, &opt_switch_user,
+     N_("Switch users without displaying the logout dialog"),
+     NULL
+   },
    { "fast", 'f', G_OPTION_FLAG_IN_MAIN, G_OPTION_ARG_NONE, &opt_fast,
      N_("Log out quickly; don't save the session"),
      NULL
***************
*** 154,159 ****
--- 141,154 ----
      {
        shutdown_type = XFSM_SHUTDOWN_HIBERNATE;
      }
+   else if (opt_lock_screen)
+     {
+       shutdown_type = XFSM_SHUTDOWN_LOCK_SCREEN;
+     }
+   else if (opt_switch_user)
+     {
+       shutdown_type = XFSM_SHUTDOWN_SWITCH_USER;
+     }
    else if (opt_version)
      {
        printf ("%s (Xfce %s)\n\n"